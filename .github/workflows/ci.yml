name: CI

on: [push, pull_request]

jobs:
  format:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Packages
        run: yarn
      - name: Check Format
        run: yarn test:format

  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Packages
        run: yarn
      - name: Lint
        run: yarn test:lint

  build-client:
    name: Build Client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Packages
        run: yarn
      - name: Build
        run: yarn workspace client build

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        with:
          driver: docker
          version: v0.5.1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ github.repository_owner == 'wpilibsuite' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Base - Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: wpilib/axon
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=edge
            type=semver,pattern={{version}}
      - name: Base - Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.repository_owner == 'wpilibsuite' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) }}
          context: .
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            AXON_VERSION=${{ steps.docker_meta.outputs.version }}
