scalar DateTime
scalar Upload

type Query {
  isDockerConnected: Boolean!

  dataset(id: ID!): Dataset
  datasets: [Dataset!]!
  project(id: ID!): Project
  projects: [Project!]!
}

type Mutation {
  createDataset(upload: Upload!): Dataset

  createProject(name: String!): Project
  updateProject(id: ID!, updates: ProjectUpdateInput!): Project

  startTraining(id: ID!): Project
  haltTraining(id: ID!): Project
  exportCheckpoint(id: ID!, checkpointNumber: Int!, name: String!): Project
}

type Size {
  width: Int!
  height: Int!
}

type Point {
  x: Int!
  y: Int!
}

type ObjectLabel {
  className: String!
  points: [Point!]!
}

type LabeledImage {
  path: String!
  size: Size!
  tags: [String!]!
  object_labels: [ObjectLabel!]!
}

type Dataset {
  id: ID!
  name: String!
  path: String!

  classes: [String!]!
  tags: [String!]!

  images: [LabeledImage!]!
}

type TrainingMetrics {
  loss: Float!
  precision: Float!
  intersectionOverUnion: Float!
}

type Checkpoint {
  step: Int!
  metrics: TrainingMetrics!
}

type Project {
  id: ID!
  name: String!
  initialCheckpoint: String!
  datasetPath: String!

  epochs: Int!
  batchSize: Int!
  evalFrequency: Int!
  percentEval: Float!

  inProgress: Boolean!
  checkpoints: [Checkpoint]
}

type ContainerParameters {
  name: String
  epochs: Int
  batchSize: Int
  evalFrequency: Int
  percentEval: Int
  datasetPath: String
  checkpoint: String
}

input ProjectUpdateInput {
  name: String

  initialCheckpoint: String
  datasetPath: String

  epochs: Int
  batchSize: Int
  evalFrequency: Int
  percentEval: Float
}
